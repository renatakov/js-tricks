// Регулярные выражения!
// . - любой одиночный символ
// [ ] - любой из них, диапазоны
// $ - конец строки
// ^ - начало строки
// \ - экранирование
// \d - любую цифру
// \D - все что угодно, кроме цифр
// \s - пробелы
// \S - все кроме пробелов
// \w - буква
// \W - все кроме букв
// \b - граница слова
// \B - не границ
      
// В JavaScript регулярные выражения (Regular Expressions) поддерживают различные флаги (modifiers), 
// которые изменяют поведение сопоставления. Флаги указываются после закрывающего слеша (`/`) в конце 
// регулярного выражения.

// Вот некоторые из наиболее часто используемых флагов:

// 1. `g` (глобальный поиск):
//    Этот флаг позволяет выполнить глобальный поиск всех совпадений вместо первого. Если флаг `g` не указан, 
// поиск остановится после первого совпадения.
   
// 2. `i` (игнорирование регистра):
//    Флаг `i` позволяет производить поиск без учета регистра. Например, `/apple/i` будет находить и 
// "apple" и "Apple".

// 3. `m` (многострочный поиск):
//    Флаг `m` позволяет производить поиск по нескольким строкам. Он используется, когда вы хотите искать 
// совпадения в многострочных текстах.

// 4. `s` (доталльный режим, dotall):
//    Флаг `s` позволяет символу `.` (точке) совпадать с символом новой строки (`\n`). 
// По умолчанию, `.` не совпадает с символами новой строки.

// 5. `u` (юникодный режим):
//    Флаг `u` используется для работы с юникодными символами в регулярных выражениях.

// 6. `y` (сопоставление с начала последнего совпадения):
//    Флаг `y` выполняет поиск с начала последнего совпадения. Он используется совместно с методом `exec()`.

// 7. `d` (отладочный режим):
//    Флаг `d` позволяет добавить комментарии и пробелы в регулярное выражение для улучшения его читаемости. 
// Этот флаг не является стандартом и поддерживается не всеми браузерами.
let number = "+38 097-221-17-92"
console.log(number.search(/^\+\d{2}\s\d{3}-\d{3}-\d{2}-\d{2}/))
let email = "renatakov1010@gmail.com"
email.search(/\w\d@gmail\.com/)
let test = "I walk Through The wall"
let multiplyString = "I walk through the wall. I saw a portal. I walked through the portal"
let regExp = /through/gs
console.log(multiplyString.search(/through/sg))
console.log(test.search(/th/i))
console.log(regExp.exec(multiplyString))
console.log(regExp.exec(multiplyString))





// let inputEmail1 = document.querySelector("#inputMail")
// let inputEmailValue1
// inputEmail1.addEventListener('input', (e)=>{
//     inputEmailValue1 = e.target.value
//     if(inputEmailValue1.match(/\w\d@gmail\.com/)){
//         console.log('True')
//     } else {
//         console.log('False')
//     }

// })
// Квантификация
// n{4} - искать n подряд 4 раза
// n{4,6} - искать n от 4 до 6
// * от нуля и выше
// + от 1 и выше
// ? - нуль или 1 раз